{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Painel from \"./components/Painel\";\nimport Resultado from \"./components/Resultado\";\nimport Topo from \"./components/Topo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      num1: '',\n      num2: '',\n      operacao: 'soma',\n      resultado: ''\n    };\n    _this.calcular = _this.calcular.bind(_assertThisInitialized(_this));\n    _this.limpar = _this.limpar.bind(_assertThisInitialized(_this));\n    _this.atualizaValor = _this.atualizaValor.bind(_assertThisInitialized(_this));\n    _this.atualizaOperacao = _this.atualizaOperacao.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"calcular\",\n    value: function calcular() {\n      var resultado = 0;\n\n      switch (this.state.operacao) {\n        case 'soma':\n          resultado = parseFloat(this.state.num1) + parseFloat(this.state.num2);\n          break;\n\n        case 'subtracao':\n          resultado = parseFloat(this.state.num1) - parseFloat(this.state.num2);\n          break;\n\n        case 'multiplicacao':\n          resultado = parseFloat(this.state.num1) * parseFloat(this.state.num2);\n          break;\n\n        case 'divisao':\n          resultado = parseFloat(this.state.num1) / parseFloat(this.state.num2);\n          break;\n\n        default:\n          resultado = 0;\n      }\n\n      this.setState({\n        resultado: resultado.toString()\n      });\n    }\n  }, {\n    key: \"atualizaOperacao\",\n    value: function atualizaOperacao(operacao) {\n      this.setState({\n        operacao: operacao\n      });\n    }\n  }, {\n    key: \"atualizaValor\",\n    value: function atualizaValor(nomeCampo, numero) {\n      var obj = {};\n      obj[nomeCampo] = numero;\n      this.setState(obj);\n    }\n  }, {\n    key: \"limpar\",\n    value: function limpar() {\n      this.setState({\n        num1: '',\n        num2: '',\n        operacao: 'soma',\n        resultado: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(Fragment, {\n        children: [_jsx(SafeAreaView, {\n          style: {\n            backgroundColor: '#000'\n          }\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Topo, {}), _jsx(Resultado, {\n            resultado: this.state.resultado\n          }), _jsx(Painel, {\n            num1: this.state.num1,\n            num2: this.state.num2,\n            operacao: this.state.operacao,\n            calcular: this.calcular,\n            limpar: this.limpar,\n            atualizaOperacao: this.atualizaOperacao,\n            atualizaValor: this.atualizaValor\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Component","Fragment","Painel","Resultado","Topo","App","props","state","num1","num2","operacao","resultado","calcular","bind","limpar","atualizaValor","atualizaOperacao","parseFloat","setState","toString","nomeCampo","numero","obj","backgroundColor","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"sources":["D:/Area de trabalho/Programação/React Native/calculadora/App.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { StyleSheet, View, SafeAreaView } from 'react-native';\nimport Painel from './components/Painel';\nimport Resultado from './components/Resultado';\nimport Topo from './components/Topo';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { num1: '', num2: '', operacao: 'soma', resultado: '' };\n    this.calcular = this.calcular.bind(this);\n    this.limpar = this.limpar.bind(this);\n    this.atualizaValor = this.atualizaValor.bind(this);\n    this.atualizaOperacao = this.atualizaOperacao.bind(this);\n  }\n\n  calcular() {\n    let resultado = 0;\n\n    switch (this.state.operacao) {\n      case 'soma':\n        resultado = parseFloat(this.state.num1) + parseFloat(this.state.num2);\n        break;\n      case 'subtracao':\n        resultado = parseFloat(this.state.num1) - parseFloat(this.state.num2);\n        break;\n      case 'multiplicacao':\n        resultado = parseFloat(this.state.num1) * parseFloat(this.state.num2)\n        break;\n      case 'divisao':\n        resultado = parseFloat(this.state.num1) / parseFloat(this.state.num2);\n        break;\n      default:\n        resultado = 0;\n    }\n    this.setState({ resultado: resultado.toString() });\n  }\n\n  atualizaOperacao(operacao) {\n    this.setState({ operacao });\n  }\n\n  atualizaValor(nomeCampo, numero) {\n    const obj = {};\n    obj[nomeCampo] = numero;\n\n    this.setState(obj);\n  }\n\n  limpar() {\n    this.setState({num1: '', num2: '', operacao: 'soma', resultado: ''})\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <SafeAreaView style={{ backgroundColor: '#000' }} />\n        <View style={styles.container}>\n          <Topo />\n          <Resultado resultado={this.state.resultado} />\n          <Painel\n            num1={this.state.num1}\n            num2={this.state.num2}\n            operacao={this.state.operacao}\n            calcular={this.calcular}\n            limpar={this.limpar}\n            atualizaOperacao={this.atualizaOperacao}\n            atualizaValor={this.atualizaValor}\n          />\n        </View>\n      </Fragment>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}